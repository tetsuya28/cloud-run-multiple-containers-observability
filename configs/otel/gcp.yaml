receivers:
  otlp:
    protocols:
      grpc:
        endpoint: "0.0.0.0:4317"
  prometheus:
    config:
      global:
        external_labels:
          service: ${K_SERVICE}
          revision: ${K_REVISION}
      scrape_configs:
        - job_name: cloud-run-otel
          scrape_interval: 10s
          static_configs:
            - targets:
                - localhost:8888
        - job_name: cloud-run
          scrape_interval: 10s
          metrics_path: /metrics
          static_configs:
            - targets:
                - localhost:8080
exporters:
  googlemanagedprometheus:
    project: ${PROJECT_ID}
  googlecloud:
    trace:
      endpoint: cloudtrace.googleapis.com:443
service:
  telemetry:
    logs:
      level: WARN
      encoding: json
  extensions:
    - health_check
  pipelines:
    metrics:
      receivers:
        - prometheus
      processors:
        - batch
        - resourcedetection
        - resource
      exporters:
        - googlemanagedprometheus
    traces:
      receivers:
        - otlp
      exporters:
        - googlecloud
processors:
  batch:
    send_batch_max_size: 200
    send_batch_size: 200
    timeout: 5s
  resourcedetection:
    detectors:
      - env
      - gcp
  resource:
    attributes:
      - key: service.name
        value: ${env:K_SERVICE}
        action: upsert
      - key: service.instance.id
        from_attribute: faas.id
        action: insert
extensions:
  health_check: null
